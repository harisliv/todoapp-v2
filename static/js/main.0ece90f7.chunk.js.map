{"version":3,"sources":["components/Filter.js","components/Form.js","UI/ListItem.js","components/List.js","UI/SelectIcon.js","App.js","index.js"],"names":["Filter","checked","onChange","className","type","id","name","value","htmlFor","Form","formSubmit","useState","input","setInput","inputRef","useRef","useEffect","current","focus","onSubmit","event","preventDefault","ref","autoComplete","target","placeholder","ListItem","props","onMouseEnter","onMouseLeave","children","List","todos","deleteTodo","updateTodo","completeTodo","updateId","setUpdateID","updateInput","setUpdateInput","completed","setCompleted","showIcons","setShowIcons","changeHandlerForm","changeHandlerCheckbox","handleKeyDown","keyCode","map","todo","onKeyDown","onClick","content","SelectIcon","classes","App","filter","setTodos","setChecked","toggleSelectAllIcon","setToggleSelectAllIcon","itemsLeft","length","prev","concat","Math","floor","random","newContent","found","find","newTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ece90f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../styling/Filter.css'\r\n\r\nconst Filter = ({checked, onChange}) => {\r\n  return (\r\n    <div className=\"filterTodo\">\r\n      <input\r\n        type=\"radio\"\r\n        id=\"all\"\r\n        name=\"filter\"\r\n        value=\"all\"\r\n        onChange={onChange}\r\n        checked={checked === 'all'}\r\n      />\r\n      <label htmlFor=\"all\">All</label>\r\n      <input\r\n        type=\"radio\"\r\n        id=\"pending\"\r\n        name=\"filter\"\r\n        value=\"pending\"\r\n        onChange={onChange}\r\n        checked={checked === 'pending'}\r\n      />\r\n      <label htmlFor=\"pending\">Active</label>\r\n      <input\r\n        type=\"radio\"\r\n        id=\"done\"\r\n        name=\"filter\"\r\n        value=\"done\"\r\n        onChange={onChange}\r\n        checked={checked === 'done'}\r\n      />\r\n      <label htmlFor=\"done\">Completed</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport '../styling/Form.css'\r\n\r\nconst Form = ({formSubmit}) => {\r\n    const [input, setInput] = useState('');\r\n    const inputRef = useRef('');\r\n\r\n    useEffect(() => {\r\n      inputRef.current.focus();\r\n    }, [])\r\n\r\n    const changeHandler = (event) => {\r\n        setInput(event.target.value);\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        // console.log(input);\r\n        formSubmit(input);\r\n        setInput('');\r\n    }\r\n\r\n  return (\r\n    <form className=\"newTodoForm\" onSubmit={submitHandler}>\r\n      <input\r\n        ref={inputRef}\r\n        className=\"mainInput\"\r\n        type=\"text\"\r\n        name=\"main_input\"\r\n        autoComplete=\"off\"\r\n        value={input}\r\n        onChange={changeHandler}\r\n        placeholder=\"What needs to be done?\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst ListItem = (props) => {\r\n  return (\r\n    <li\r\n      className={props.className}\r\n      onMouseEnter={props.onMouseEnter}\r\n      onMouseLeave={props.onMouseLeave}\r\n    >\r\n      {props.children}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ListItem from \"../UI/ListItem\";\r\nimport \"../styling/List.css\";\r\n\r\nconst List = ({ todos, deleteTodo, updateTodo, completeTodo }) => {\r\n  const [updateId, setUpdateID] = useState(\"\");\r\n  const [updateInput, setUpdateInput] = useState(\"\");\r\n  const [completed, setCompleted] = useState(false);\r\n  const [showIcons, setShowIcons] = useState(\"\");\r\n\r\n  const deleteHandlerTodo = (id) => {\r\n    deleteTodo(id);\r\n  };\r\n\r\n  const showUpdateForm = (id, content) => {\r\n    setUpdateID(id);\r\n    setUpdateInput(content);\r\n  };\r\n\r\n  const changeHandlerForm = (event) => {\r\n    setUpdateInput(event.target.value);\r\n  };\r\n\r\n  const clickHandlerCheckbox = (id) => {\r\n    completeTodo(id);\r\n  };\r\n\r\n  const changeHandlerCheckbox = (event) => {\r\n    setCompleted(event.target.value);\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n      updateTodo(updateId, updateInput);\r\n      setUpdateInput(\"\");\r\n      setUpdateID(\"\");\r\n    }\r\n\r\n    if (event.keyCode === 27) {\r\n      setUpdateID(\"\");\r\n      setUpdateInput(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul className=\"todoList\">\r\n      {todos.map((todo) =>\r\n        updateId === todo.id ? (\r\n          <form key={todo.id} className=\"updateForm\" onKeyDown={handleKeyDown}>\r\n            <input\r\n              className=\"updateInput\"\r\n              type=\"text\"\r\n              value={updateInput}\r\n              autoComplete=\"off\"\r\n              onChange={changeHandlerForm}\r\n            />\r\n          </form>\r\n        ) : (\r\n          <ListItem\r\n            onMouseEnter={() => setShowIcons(todo.id)}\r\n            onMouseLeave={() => setShowIcons(\"\")}\r\n            key={todo.id}\r\n            className={\r\n              todo.completed ? \"completed listItem\" : \"pending listItem\"\r\n            }\r\n          >\r\n            <input\r\n              id={todo.id}\r\n              className=\"completedCheckbox\"\r\n              type=\"checkbox\"\r\n              onChange={changeHandlerCheckbox}\r\n              checked={todo.completed}\r\n              value={completed}\r\n              onClick={() => clickHandlerCheckbox(todo.id)}\r\n            />\r\n            <label htmlFor={todo.id} className=\"customCheckBox\">\r\n              <div>\r\n                <i className=\"fa fa-check\"></i>\r\n              </div>\r\n            </label>\r\n            <label className=\"contentTitle\">{todo.content}</label>\r\n            {todo.id === showIcons && (\r\n              <i\r\n                className=\"fas fa-pencil-alt editIcon controlIcon\"\r\n                onClick={() => showUpdateForm(todo.id, todo.content)}\r\n              ></i>\r\n            )}\r\n            {todo.id === showIcons && (\r\n              <i\r\n                className=\"far fa-trash-alt deleteIcon controlIcon\"\r\n                onClick={() => deleteHandlerTodo(todo.id)}\r\n              ></i>\r\n            )}\r\n          </ListItem>\r\n        )\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\n\r\nfunction SelectIcon(props) {\r\n    const classes = `${props.className} fas selectAllIcon`;\r\n  return <i className={classes} onClick={props.onClick}></i>;\r\n}\r\n\r\nexport default SelectIcon;\r\n","import React, { useState } from \"react\";\r\nimport Filter from \"./components/Filter\";\r\nimport Form from \"./components/Form\";\r\nimport List from \"./components/List\";\r\nimport \"./styling/App.css\";\r\nimport SelectIcon from \"./UI/SelectIcon\";\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [checked, setChecked] = useState(\"all\");\r\n  const [toggleSelectAllIcon, setToggleSelectAllIcon] = useState(true);\r\n\r\n  const changeFilterHandler = (event) => {\r\n    setChecked(event.target.value);\r\n  };\r\n\r\n  const formSubmitHandler = (input) => {\r\n    setTodos((prev) =>\r\n      prev.concat({\r\n        id: Math.floor(Math.random() * 10000),\r\n        content: input,\r\n        completed: false,\r\n      })\r\n    );\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    setTodos((prev) => prev.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  const updateTodo = (id, content) => {\r\n    const newContent = { id: id, content: content, completed: false };\r\n    setTodos((prev) =>\r\n      prev.map((todo) => (todo.id === id ? newContent : todo))\r\n    );\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    const found = todos.find((todo) => todo.id === id);\r\n    const newTodo = { ...found, completed: !found.completed };\r\n    setTodos((prev) => prev.map((todo) => (todo.id === id ? newTodo : todo)));\r\n  };\r\n\r\n  const filterTodos = (filter) => {\r\n    if (filter === \"done\") {\r\n      const doneArr = todos.filter((todo) => todo.completed === true);\r\n      return doneArr;\r\n    } else if (filter === \"pending\") {\r\n      const pendingArr = todos.filter((todo) => todo.completed === false);\r\n      return pendingArr;\r\n    } else if (filter === \"all\") {\r\n      return todos;\r\n    }\r\n  };\r\n\r\n  const itemsLeft = todos.filter((todo) => todo.completed === false).length;\r\n\r\n  const clearCompleted = () => {\r\n    setTodos((prev) => prev.filter((todo) => todo.completed === false));\r\n  };\r\n\r\n  const selectAllHandler = () => {\r\n    setTodos((prev) =>\r\n      prev.map((todo) => {\r\n        return { ...todo, completed: toggleSelectAllIcon };\r\n      })\r\n    );\r\n    setToggleSelectAllIcon(!toggleSelectAllIcon);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"appTitle\">Haris Liv ToDo App</h1>\r\n      <div className=\"App\">\r\n          <SelectIcon\r\n            className={toggleSelectAllIcon ? \"fa-sort-down\" : \"fa-caret-up\"}\r\n            onClick={selectAllHandler}\r\n          /> \r\n        <Form formSubmit={formSubmitHandler} />\r\n        <List\r\n          todos={filterTodos(checked)}\r\n          deleteTodo={deleteTodo}\r\n          updateTodo={updateTodo}\r\n          completeTodo={completeTodo}\r\n        />\r\n        <div className=\"footer\">\r\n          <label className=\"itemsLeft\">{itemsLeft} items left</label>\r\n          <Filter onChange={changeFilterHandler} checked={checked} />\r\n          <button className=\"clearCompleted\" onClick={clearCompleted}>\r\n            Clear completed\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styling/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}